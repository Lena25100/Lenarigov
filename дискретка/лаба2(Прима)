using System;

class AlgPrima
{
    static int V = 5;

    static int MinKey(int[] key, bool[] MinOstTree)
    {
        int min = int.MaxValue, minIndex = -1;

        for (int v = 0; v < V; v++)
        {
            if (!MinOstTree[v] && key[v] < min)
            {
                min = key[v];
                minIndex = v;
            }
        }

        return minIndex;
    }


    static void PrintMinOstTree(int[] parent, int[,] graph)
    {
        Console.WriteLine("Ребро \tВес");
        int totalWeight = 0;

        for (int i = 1; i < V; i++)
        {
            int weight = graph[i, parent[i]];
            Console.WriteLine($"{parent[i]} - {i} \t{weight}");
            totalWeight += weight;
        }

        Console.WriteLine($"\nСумма весов кратчайшего остовного дерева: {totalWeight}");
    }

    static void PrimMST(int[,] graph)
    {
        int[] parent = new int[V];
        int[] key = new int[V];
        bool[] mstSet = new bool[V];

        for (int i = 0; i < V; i++)
        {
            key[i] = int.MaxValue;
            mstSet[i] = false;
        }

        key[0] = 0;
        parent[0] = -1;

        for (int count = 0; count < V - 1; count++)
        {
            int u = MinKey(key, mstSet);
            mstSet[u] = true;

            for (int v = 0; v < V; v++)
            {
                if (graph[u, v] != 0 && !mstSet[v] && graph[u, v] < key[v])
                {
                    parent[v] = u;
                    key[v] = graph[u, v];
                }
            }
        }

        PrintMinOstTree(parent, graph);
    }


    static void Main()
    {
        int[,] graph = new int[,] {
            { 0, 2, 0, 6, 0 },
            { 2, 0, 3, 8, 5 },
            { 0, 3, 0, 0, 7 },
            { 6, 8, 0, 0, 9 },
            { 0, 5, 7, 9, 0 }
        };

        PrimMST(graph);
    }
}
