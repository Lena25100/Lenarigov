using System;

class FordBellman
{
    static void Main()
    {

        int[,] graph = {
            { 0, 6, 4, int.MaxValue },
            { int.MaxValue, 0, 1, 7 },
            { int.MaxValue, int.MaxValue, 0, 3 },
            { int.MaxValue, int.MaxValue , int.MaxValue, 0 }
        };

        int V = graph.GetLength(0);   
        int startVertex = 0;       

        int[] distance = new int[V];
        int[] pred = new int[V];

        for (int i = 0; i < V; i++)
        {
            distance[i] = int.MaxValue;
            pred[i] = -1;
        }

        distance[startVertex] = 0;


        for (int k = 0; k < V - 1; k++)
        {
            for (int u = 0; u < V; u++)
            {
                for (int v = 0; v < V; v++)
                {
                    if (graph[u, v] != int.MaxValue && distance[u] != int.MaxValue &&
                        distance[u] + graph[u, v] < distance[v])
                    {
                        distance[v] = distance[u] + graph[u, v];
                        pred[v] = u;
                    }
                }
            }
        }

        bool HasMinusCycle = false;
        for (int u = 0; u < V; u++)
        {
            for (int v = 0; v < V; v++)
            {
                if (graph[u, v] != int.MaxValue && distance[u] != int.MaxValue &&
                    distance[u] + graph[u, v] < distance[v])
                {
                    HasMinusCycle = true;
                    break;
                }
            }
        }

        if (HasMinusCycle)
        {
            Console.WriteLine("Граф содержит отрицательный цикл.");
        }
        else
        {
            Console.WriteLine($"Кратчайшие расстояния от вершины {startVertex}:");
            for (int i = 0; i < V; i++)
            {
                if (distance[i] == int.MaxValue)
                    Console.WriteLine($"До вершины {i}: нет пути");
                else
                    Console.WriteLine($"До вершины {i}: {distance[i]}");
            }

            for (int i = 0; i < V; i++)
            {
                if (i == startVertex || distance[i] == int.MaxValue)
                    continue;

                Console.Write($"Путь до вершины {i}: ");
                PrintPath(pred, i);
                Console.WriteLine();
            }
        }
    }

    static void PrintPath(int[] pred, int v)
    {
        if (pred[v] == -1)
        {
            Console.Write(v);
            return;
        }
        PrintPath(pred, pred[v]);
        Console.Write(" → " + v);
    }
}
